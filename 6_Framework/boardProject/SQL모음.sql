ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE;

-- 계정 생성
CREATE USER project IDENTIFIED BY "project1234";

-- 권한 부여
GRANT CONNECT, RESOURCE, CREATE VIEW TO project;

-- 객체 생성 공간 할당
ALTER USER project DEFAULT TABLESPACE SYSTEM
QUOTA UNLIMITED ON SYSTEM;

------------------------------------------------------------

DROP TABLE "MEMBER";

CREATE TABLE "MEMBER" (
	"MEMBER_NO"	NUMBER		NOT NULL,
	"MEMBER_EMAIL"	VARCHAR2(50)		NOT NULL,
	"MEMBER_PW"	VARCHAR2(100)		NOT NULL,

	"MEMBER_NICKNAME" VARCHAR2(30) NOT NULL,
	
	"MEMBER_TEL"	CHAR(11)		NOT NULL,
	"MEMBER_ADDR"	VARCHAR2(300)		NULL,
	"PROFILE_IMG"	VARCHAR2(300)		NULL,
	"ENROLL_DATE"	DATE	DEFAULT SYSDATE	NOT NULL,
	"MEMBER_DEL_FL"	CHAR(1)	DEFAULT 'N'	NOT NULL,
	"AUTHORITY"	NUMBER	DEFAULT 1	NOT NULL
);

COMMENT ON COLUMN "MEMBER"."MEMBER_NO" IS '회원 번호(SEQ_MEMBER_NO)';

COMMENT ON COLUMN "MEMBER"."MEMBER_EMAIL" IS '회원 이메일';

COMMENT ON COLUMN "MEMBER"."MEMBER_PW" IS '회원 비밀번호(암호화 적용)';

COMMENT ON COLUMN "MEMBER"."MEMBER_NICKNAME" IS '회원 이름(별명)';

COMMENT ON COLUMN "MEMBER"."MEMBER_TEL" IS '전화번호(- 없음)';

COMMENT ON COLUMN "MEMBER"."MEMBER_ADDR" IS '회원 주소';

COMMENT ON COLUMN "MEMBER"."PROFILE_IMG" IS '프로필 이미지 저장 경로';

COMMENT ON COLUMN "MEMBER"."ENROLL_DATE" IS '회원 가입일';

COMMENT ON COLUMN "MEMBER"."MEMBER_DEL_FL" IS '탈퇴여부(N:탈퇴X, Y: 탈퇴O)';

COMMENT ON COLUMN "MEMBER"."AUTHORITY" IS '회원권한(1:일반, 2:관리자)';


ALTER TABLE "MEMBER" ADD CONSTRAINT "PK_MEMBER" PRIMARY KEY (
	"MEMBER_NO"
);

-- 탈퇴여부 CHECK 제약 조건
ALTER TABLE "MEMBER" ADD CONSTRAINT "CH_MEMBER_DEL_FL" 
CHECK("MEMBER_DEL_FL" IN ('N', 'Y'));

-- 권한 CHECK 제약 조건
ALTER TABLE "MEMBER" ADD CONSTRAINT "CH_AUTHORITY" 
CHECK("AUTHORITY" IN (1, 2));


-- 시퀀스 생성
CREATE SEQUENCE SEQ_MEMBER_NO NOCACHE;


-- 샘플 계정 추가
INSERT INTO "MEMBER"
VALUES(SEQ_MEMBER_NO.NEXTVAL, 'user01@kh.or.kr', 'pass01!'
	, '유저일', '01012341234', '06234,,서울 강남구 테헤란로 14길 6,,5층',
	NULL, DEFAULT, DEFAULT, DEFAULT);


INSERT INTO "MEMBER"
VALUES(SEQ_MEMBER_NO.NEXTVAL, 'user02@kh.or.kr', 'pass02!'
	, '이번유저', '01043214321', '06234,,서울 강남구 테헤란로 14길 6,,5층',
	NULL, DEFAULT, DEFAULT, DEFAULT);

COMMIT;



-- 로그인 SQL
SELECT MEMBER_NO, MEMBER_EMAIL, MEMBER_NICKNAME,
	MEMBER_TEL, MEMBER_ADDR, PROFILE_IMG, AUTHORITY,
	TO_CHAR(ENROLL_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') AS ENROLL_DATE 
FROM "MEMBER"
WHERE MEMBER_DEL_FL = 'N'
AND MEMBER_EMAIL = 'user01@kh.or.kr'
AND MEMBER_PW = 'pass01!'
;

-- 댓글 목록 조회 
SELECT COMMENT_NO, COMMENT_CONTENT,
    TO_CHAR(C_CREATE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') C_CREATE_DATE,
    BOARD_NO,MEMBER_NO,MEMBER_NICKNAME,PROFILE_IMG,PARENT_NO, COMMENT_DEL_FL
FROM "COMMENT"
JOIN MEMBER USING(MEMBER_NO)
WHERE BOARD_NO = 2019
ORDER BY COMMENT_NO;

SELECT * FROM BOARD
ORDER BY BOARD_NO DESC;

-- 댓글 삽입 (1004,1005,1006)
INSERT INTO "COMMENT"
VALUES (SEQ_COMMENT_NO.NEXTVAL,'부모댓글1',DEFAULT,DEFAULT,2019,1,NULL);

INSERT INTO "COMMENT"
VALUES (SEQ_COMMENT_NO.NEXTVAL,'부모댓글2',DEFAULT,DEFAULT,2019,1,NULL);

INSERT INTO "COMMENT"
VALUES (SEQ_COMMENT_NO.NEXTVAL,'자식댓글1-1',DEFAULT,DEFAULT,2019,1,1004);

INSERT INTO "COMMENT"
VALUES (SEQ_COMMENT_NO.NEXTVAL,'자식댓글1-2',DEFAULT,DEFAULT,2019,1,1004);

INSERT INTO "COMMENT"
VALUES (SEQ_COMMENT_NO.NEXTVAL,'자식댓글1-3',DEFAULT,DEFAULT,2019,1,1004);

INSERT INTO "COMMENT"
VALUES (SEQ_COMMENT_NO.NEXTVAL,'자식댓글2-1',DEFAULT,DEFAULT,2019,1,1005);

INSERT INTO "COMMENT"
VALUES (SEQ_COMMENT_NO.NEXTVAL,'자식댓글2-2',DEFAULT,DEFAULT,2019,1,1005);

INSERT INTO "COMMENT"
VALUES (SEQ_COMMENT_NO.NEXTVAL,'자식댓글2-1-1',DEFAULT,DEFAULT,2019,1,1010);

COMMIT;

/* 계층형 쿼리(START WITH, CONNECT BY, ORDER SIBLINES BY)
 - 상위 타입과 하위 타입간의 관계를 계층식으로 표현할 수 있게하는 질의어(SELECT)
 - START WITH : 상위 타입(최상위 부모)으로 사용될 행을 지정 (서브쿼리로 지정 가능)
    
    - CONNECT BY 
      -> 상위 타입과 하위 타입 사이의 관계를 규정
      -> PRIOR(이전의) 연산자와 같이 사용하여
         현재 행 이전에 상위 타입 또는 하위 타입이 있을지 규정
    
       1) 부모 -> 자식 계층 구조
         CONNECT BY PRIOR 자식 컬럼 = 부모 컬럼
    
       2) 자식 -> 부모 계층 구조
         CONNECT BY PRIOR 부모 컬럼 = 자식 컬럼
    
    - ORDER SIBLINGS BY : 계층 구조 정렬
    
    
    ** 계층형 쿼리가 적용 SELECT 해석 순서 **
    
    5 : SELECT
    1 : FROM (+JOIN)
    4 : WHERE
    2 : START WITH
    3 : CONNECT BY
    6 : ORDER SIBLINGS BY
    
    -- WHERE절이 계층형 쿼리보다 해석 순서가 늦기 때문에
       먼저 조건을 반영하고 싶은 경우 FROM 절 서브쿼리(인라인뷰)를 이용
*/

-- 댓글 목록 조회 (계층형쿼리적용)
SELECT LEVEL, C.* FROM 
(SELECT COMMENT_NO, COMMENT_CONTENT,
    TO_CHAR(C_CREATE_DATE, 'YYYY"년" MM"월" DD"일" HH24"시" MI"분" SS"초"') C_CREATE_DATE,
    BOARD_NO,MEMBER_NO,MEMBER_NICKNAME,PROFILE_IMG,PARENT_NO, COMMENT_DEL_FL
FROM "COMMENT"
JOIN MEMBER USING(MEMBER_NO)
WHERE BOARD_NO = 2019) C
WHERE COMMENT_DEL_FL = 'N'
START WITH PARENT_NO IS NULL
CONNECT BY PRIOR COMMENT_NO=PARENT_NO
ORDER SIBLINGS BY COMMENT_NO 
;

-- 댓글 삽입
INSERT INTO "COMMENT"
VALUES(SEQ_COMMENT_NO.NEXTVAL,#{commentContent},DEFAULT,DEFAULT,#{boardNo},#{memberNo})

-- 댓글 삭제 
UPDATE "COMMENT" SET 
COMMENT_DEL_FL ='Y'
WHERE COMMENT_NO = ?



-- 댓글 삽입 
INSERT INTO "COMMENT"
VALUES(SEQ_COMMNET_NO.NEXTVAL,


